
@page "/applicant-list"
@using SocialAssistanceFund.Models
@using SocialAssistanceFund.Services
@inject IApplicantService applicantService

<h3>Applicant List</h3>

@if (applicants == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Name</th>
                <th>ID Number</th>
                <th>County</th>
                <th>Status</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var applicant in paginatedApplicants)
            {
                <tr>
                    <td>@($"{applicant.FirstName} {applicant.LastName}")</td>
                    <td>@applicant.IdNumber</td>
                    <td>@applicant.Village?.SubLocation?.Location?.SubCounty?.County?.CountyName</td>
                    <td>@applicant.Status</td>
                </tr>
            }
        </tbody>
    </table>

    <div>
        <button @onclick="PreviousPage" disabled="@(currentPage == 1)">Previous</button>
        <span>Page @currentPage of @totalPages</span>
        <button @onclick="NextPage" disabled="@(currentPage == totalPages)">Next</button>
    </div>
}

@code {
    private IEnumerable<Applicant> applicants;
    private IEnumerable<Applicant> paginatedApplicants;
    private int currentPage = 1;
    private int pageSize = 10;
    private int totalPages = 1;

    protected override async Task OnInitializedAsync()
    {
        applicants = await applicantService.GetAllApplicantsAsync();
        totalPages = (int)Math.Ceiling(applicants.Count() / (double)pageSize);
        UpdatePagination();
    }

    private void UpdatePagination()
    {
        paginatedApplicants = applicants.Skip((currentPage - 1) * pageSize).Take(pageSize);
    }

    private void NextPage()
    {
        if (currentPage < totalPages)
        {
            currentPage++;
            UpdatePagination();
        }
    }

    private void PreviousPage()
    {
        if (currentPage > 1)
        {
            currentPage--;
            UpdatePagination();
        }
    }
}